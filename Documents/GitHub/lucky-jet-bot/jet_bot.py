import telebot, sqlite3, time
from telebot import types
import random as r
import numpy as np

bot = telebot.TeleBot('7348101281:AAEqKe6PyKE5-G6P2b-BotKoMVi8xTO6m6A')


def connect_database():
    conn = sqlite3.connect('users.db', check_same_thread=False)
    cursor = conn.cursor()
    return conn, cursor


conn, cursor = connect_database()
cursor.execute('''
CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER PRIMARY KEY,
    username TEXT,
    reg_flag TEXT,
    reg_id TEXT,
    signal TEXT
)
''')
conn.commit()
conn.close()


def add_user(user_id, username):
    conn, cursor = connect_database()
    cursor.execute("INSERT OR IGNORE INTO users (user_id, username) VALUES (?, ?)", (user_id, username))
    conn.commit()
    conn.close()


def update_user_data(user_id, reg_flag, reg_id):
    conn, cursor = connect_database()
    cursor.execute("UPDATE users SET reg_flag = ?, reg_id = ? WHERE user_id = ?",
                   (reg_flag, reg_id, user_id))
    conn.commit()
    conn.close()


def update_user_signal(user_id, signal):
    conn, cursor = connect_database()
    cursor.execute("UPDATE users SET signal = ? WHERE user_id = ?",
                   (signal, user_id))
    conn.commit()
    conn.close()


def get_user_data(user_id):
    conn, cursor = connect_database()
    cursor.execute("SELECT reg_flag, reg_id, signal FROM users WHERE user_id = ?", (user_id,))
    return cursor.fetchone()


@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    username = message.from_user.username
    add_user(user_id, username)
    markup = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton("üì≤–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", callback_data='registration')
    button2 = types.InlineKeyboardButton('üöÄ–°–∏–≥–Ω–∞–ª—ã', callback_data='signal')
    markup.add(button1)
    markup.add(button2)
    bot.send_message(message.chat.id, "{0.first_name}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ üî∏LUCKY JET OpenAIüî∏! \n \n"
                                      "üöÄLucky jet - –∫—Ä–∞—à-–∏–≥—Ä–∞ –Ω–∞ –¥–µ–Ω—å–≥–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Å–º–æ–∂–µ—Ç–µ –≤—ã–∏–≥—Ä–∞—Ç—å –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ —Å—É–º–º—ã, –º–∏–Ω–∏–º–∏–∑–∏—Ä—É—è —Ä–∏—Å–∫–∏. \n"
                                      "\n \n –ù–∞—à –±–æ—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –æ—Ç Open AI.\n \n"
                                      "–û–Ω –º–æ–∂–µ—Ç –ø—Ä–µ–¥—É–≥–∞–¥–∞—Ç—å –∫—Ä–∞—à —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 80%.".format(message.from_user),
                     reply_markup=markup)


@bot.callback_query_handler(func=lambda callback: True)
def callback_signal(call):
    if call.data == 'registration':
        user_id = call.message.chat.id
        user_data = get_user_data(user_id)
        if user_data[1] is None:
            update_user_data(user_id, 1, None)
            bot.delete_message(call.message.chat.id, call.message.message_id)
            photo = open('reg_img.jpg', 'rb')
            markup = types.InlineKeyboardMarkup()
            button1 = types.InlineKeyboardButton("üîô–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='back_menu')
            markup.add(button1)
            bot.send_photo(call.message.chat.id, photo=photo,
                           caption='üî∑ 1. –î–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞ <a href="https://1wbhk.com/casino/list/4?p=w7gk">—Å–∞–π—Ç–µ 1WIN</a> –∏ –¥–æ–±–∞–≤—å—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ ¬´VIP522¬ª \n \n'
                                   'üî∑ 2. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ c–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤–∞—à –∞–π–¥–∏ –Ω–∞ —Å–∞–π—Ç–µ (–í–∫–ª–∞–¥–∫–∞ "–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ" –∏ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É –±—É–¥–µ—Ç –≤–∞—à ID).\n \n'
                                   'üî∑ 3. –ò –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –±–æ—Ç—É –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ!', parse_mode='HTML',
                           reply_markup=markup)

        if user_data[0] == '1' and str(user_data[1]).isdigit():
            bot.delete_message(call.message.chat.id, call.message.message_id)
            markup = types.InlineKeyboardMarkup()
            button1 = types.InlineKeyboardButton("üîÑ–ü–µ—Ä–µ—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ID 1WIN", callback_data='reregistration')
            button2 = types.InlineKeyboardButton("üîô–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='back_menu')
            markup.add(button1)
            markup.add(button2)
            bot.send_message(call.message.chat.id, text=f'–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!\n\n'
                                                        f'–í–∞—à ID: {user_data[1]}', reply_markup=markup)

    if call.data == 'reregistration':
        user_id = call.message.chat.id
        update_user_data(user_id, 1, None)
        update_user_signal(user_id, None)
        bot.delete_message(call.message.chat.id, call.message.message_id)
        photo = open('reg_img.jpg', 'rb')
        markup = types.InlineKeyboardMarkup()
        button1 = types.InlineKeyboardButton("üîô–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='back_menu')
        markup.add(button1)
        bot.send_photo(call.message.chat.id, photo=photo,
                       caption='üî∑ 1. –î–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞ <a href="https://1wbhk.com/casino/list/4?p=w7gk">—Å–∞–π—Ç–µ 1WIN</a> –∏ –¥–æ–±–∞–≤—å—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ ¬´VIP522¬ª \n \n'
                               'üî∑ 2. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ c–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤–∞—à –∞–π–¥–∏ –Ω–∞ —Å–∞–π—Ç–µ (–í–∫–ª–∞–¥–∫–∞ "–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ" –∏ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É –±—É–¥–µ—Ç –≤–∞—à ID).\n \n'
                               'üî∑ 3. –ò –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –±–æ—Ç—É –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ!', parse_mode='HTML',
                       reply_markup=markup)

    if call.data == 'back_menu':
        bot.delete_message(call.message.chat.id, call.message.message_id)
        markup = types.InlineKeyboardMarkup()
        button1 = types.InlineKeyboardButton("üì≤–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", callback_data='registration')
        button2 = types.InlineKeyboardButton('üöÄ–°–∏–≥–Ω–∞–ª—ã', callback_data='signal')
        markup.add(button1)
        markup.add(button2)
        bot.send_message(call.message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ üî∏LUCKY JET OpenAIüî∏! \n \n"
                                               "üöÄLucky jet - –∫—Ä–∞—à-–∏–≥—Ä–∞ –Ω–∞ –¥–µ–Ω—å–≥–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Å–º–æ–∂–µ—Ç–µ –≤—ã–∏–≥—Ä–∞—Ç—å –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ —Å—É–º–º—ã, –º–∏–Ω–∏–º–∏–∑–∏—Ä—É—è —Ä–∏—Å–∫–∏. \n"
                                               "\n \n –ù–∞—à –±–æ—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –æ—Ç Open AI.\n \n"
                                               "–û–Ω –º–æ–∂–µ—Ç –ø—Ä–µ–¥—É–≥–∞–¥–∞—Ç—å –∫—Ä–∞—à —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 80%.", reply_markup=markup)

    if call.data == 'signal':
        user_id = call.message.chat.id
        user_data = get_user_data(user_id)
        if user_data[2] == '1':
            bot.delete_message(call.message.chat.id, call.message.message_id)
            markup = types.InlineKeyboardMarkup()
            button1 = types.InlineKeyboardButton("üöÄ–ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª", callback_data='get_signal')
            button2 = types.InlineKeyboardButton("üîô–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='back_menu')
            markup.add(button1)
            markup.add(button2)
            bot.send_message(call.message.chat.id, 'ü§ñ–ë–æ—Ç –º–æ–∂–µ—Ç –ø—Ä–µ–¥—É–≥–∞–¥–∞—Ç—å –∫—Ä–∞—à —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é –¥–æ 80%\n\n'
                                                   'üö®–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É',
                             reply_markup=markup)
        else:
            bot.delete_message(call.message.chat.id, call.message.message_id)
            markup = types.InlineKeyboardMarkup()
            button1 = types.InlineKeyboardButton("üîô–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='back_menu')
            markup.add(button1)
            bot.send_message(call.message.chat.id, '‚ÄºÔ∏è–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Å–∏–≥–Ω–∞–ª—ã –±–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!',
                             reply_markup=markup)

    if call.data == 'get_signal':
        bot.delete_message(call.message.chat.id, call.message.message_id)
        texts = '–ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Å–∞–π—Ç–∞ 1WIN...'
        message = bot.send_message(call.message.chat.id, text=texts)
        time.sleep(2)
        bot.delete_message(call.message.chat.id, message.message_id)
        numbers = np.arange(1, 3.8, 0.1)
        numbers = numbers[1:]
        crash = str(r.choice(numbers))[:3]
        if float(crash) > 2.4:
            chance = r.randint(55, 70)
        else:
            chance = r.randint(65, 80)
        markup = types.InlineKeyboardMarkup()
        button1 = types.InlineKeyboardButton("üöÄ–ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª", callback_data='get_signal')
        button2 = types.InlineKeyboardButton("üîô–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='back_menu')
        markup.add(button1)
        markup.add(button2)
        bot.send_message(call.message.chat.id, f'üí•–ü—Ä–µ–¥—É–≥–∞–¥–∞–Ω–Ω—ã–π –∫—Ä–∞—à: {crash}\n\n'
                                               f'‚ö†Ô∏è–®–∞–Ω—Å –ø—Ä–µ–¥—É–≥–∞–¥–∞–Ω–Ω–æ–≥–æ –∫—Ä–∞—à–∞: {chance}%', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def get_id(message):
    user_id = message.from_user.id
    user_data = get_user_data(user_id)
    if user_data[0] == '1' and user_data[1] is None:
        if len(str(message.text)) == 8 and str(message.text).isdigit():
            id = message.text
            update_user_data(user_id, 1, reg_id=id)
            update_user_signal(user_id, 1)
            markup = types.InlineKeyboardMarkup()
            button1 = types.InlineKeyboardButton("üîô–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='back_menu')
            markup.add(button1)
            bot.send_message(message.chat.id, text='–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!', reply_markup=markup)
        else:
            bot.send_message(message.from_user.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID.')


bot.polling()
